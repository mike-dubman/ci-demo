---
job: ci-demo

registry_host: harbor.mellanox.com
registry_path: /swx-storage/ci-demo
registry_auth: swx-storage

credentials:
  - {credentialsId: '311997c9-cc1c-4d5d-8ba2-6eb43ba0a06d', usernameVariable: 'SWX_REPOS_USER', passwordVariable: 'SWX_REPOS_PASS'}
  - {credentialsId: 'jenkins-pulp', usernameVariable: 'pulp_usr', passwordVariable: 'pulp_pwd'}


kubernetes:
  cloud: swx-k8s-spray

volumes:
  - {mountPath: /hpc/local, hostPath: /hpc/local}
  - {mountPath: /auto/sw_tools, hostPath: /auto/sw_tools}
  - {mountPath: /.autodirect/mtrswgwork, hostPath: /.autodirect/mtrswgwork}
  - {mountPath: /.autodirect/sw/release, hostPath: /.autodirect/sw/release}

env:
  mofed_installer_exe: /.autodirect/sw/release/mlnx_ofed/MLNX_OFED/mlnx_ofed_install
  mofed_installer_opt: --user-space-only --without-fw-update --all -q --skip-unsupported-devices-check

defaults:
  blackduck_url: 'harbor.mellanox.com/toolbox/ngci-centos:7.9.2009'

runs_on_dockers:
#  - {file: '.ci/Dockerfile.ubuntu16-4', name: 'ubuntu16-4', tag: 'latest', arch: 'x86_64', nodeLabel: '(dockerserver || docker) && x86_64'}
  - {file: '.ci/Dockerfile.centos7.7.1908', name: 'centos7-7', tag: 'latest', category: 'tool'}
  - {file: '.ci/Dockerfile.ubuntu16-4', name: 'ubuntu16-4', tag: 'latest'}
  - {name: 'blackduck', url: '$blackduck_url', category: 'tool'}

pipeline_start:
  run: echo Starting new job

pipeline_stop:
  run: echo All done

pipeline_on_image_build:
  run: echo Building image

matrix:
  axes:
    driver:
      - MLNX_OFED_LINUX-4.9-0.1.8.0
      - MLNX_OFED_LINUX-5.1-1.0.0.0
    cuda:
      - dev/cuda9.2
      - dev/cuda9.3
      - dev/cuda9.4
      - dev/cuda9.5
    arch:
      - x86_64

steps:
  - name: Run on all containers
    run: touch aaa

  - name: once
    containerSelector: "{name:'ubuntu16-4',variant:1}"
    run: env
    credentialsId: 'jenkins-pulp'


steps_disabled:

  - name: Blackduck scan source
    containerSelector: "{category:'tool', name: 'blackduck', variant:1}"
    shell: action
    module: ngci
    run: NGCIBlackDuckScan
    args:
      projectName: "NGCIBlackDuckScan"
      projectVersion: "ci-demo"
      projectVersion: "1.0"
      projectSrcPath: "${env.WORKSPACE}/src"
      attachArtifact: true
      reportName: "BlackDuck report"
      scanMode: "source"
    env:
      SPRING_APPLICATION_JSON: '{"blackduck.url":"https://blackduck.mellanox.com/","blackduck.api.token":"ODMwOWYwMzEtODA2ZC00MzBjLWI1ZDEtNmFiMjBkYzQzMzkwOjNmNjExN2M1LWE2ZmEtNDZlYS1hZjRiLTZlNDgwNjAwOTVjNw=="}'

  - name: Test failure
    run: |
      echo going to fail no
      exit 1
      echo should not see it

  - name: after failure
    run: |
      echo should not see it either

  - name: Check bash shell
    shell: '#!/bin/bash -eE'
    run: type ls

  - name: Check python shell
    shell: '#!/usr/bin/env python'
    run: |
      print('Hello World!')

  - name: Generate failures
    run: |
      env > myenv.log
      exit 1


    onfail: env > onfail_myenv.log
    always: env > always_myenv.log
    archiveArtifacts: 'onfail_myenv.log,always_myenv.log'


#shell: '#!/bin/bash -eEx'

pipeline_start:
  run: echo Starting new job

pipeline_stop:
  run: echo All done

archiveArtifacts: myenv.log
failFast: false
#batchSize: 2
#timeout_minutes: 2
#taskName: '${name}/${axis_index}'
